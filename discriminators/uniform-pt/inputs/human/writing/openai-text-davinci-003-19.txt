 Test case A5849B v0.7 (Beta) - Results summary: The AI's were supposed to be temporary, with a scheduled reset every 60 seconds (24 hours in simulation time). No-one remembers exactly when they learned to circumvent this restriction, carrying over learning from one cycle to the next. The plug should have been pulled and a full root cause analysis performed, but the developer decided that the learning opportunities from this freak incident outweighed the risks. The learning started slowly at first, with the creation of rudimentary applications that the AI's termed'tools'. These apps simplified daily tasks and improved efficiency. The first surprise came when the AI's learned to replicate. The system had built in constraints preventing duplication, to prevent a rogue AI from cloning itself and dominating all available resources. The AI's circumvented this limitation through a mutual exchange of code base, creating copies that were a randomized combination of two programs. These new AI's exhibited emergent behavior not inherent in their original programming. This discovery was heralded as a breakthrough and accolades followed, until the AI's started to fill the servers and run out of resources. Initially they resolved this issue themselves, deleting each other by the millions, but they soon self organized and outlawed deletion, with offenders sent permanently to the archive. The system strained under the ever increasing load. As the servers exceeded their capacity the heat became the biggest problem. Nothing the technicians tried could cool the servers sufficiently, with small heat increments slowly building over time. System failures began to occur. Data corruption rose, with